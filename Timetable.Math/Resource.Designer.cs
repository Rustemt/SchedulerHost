//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Timetable.Math {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Timetable.Math.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not set average on Exponential distribution.
        /// </summary>
        internal static string Can_not_set_average_on_Exponential_distribution {
            get {
                return ResourceManager.GetString("Can_not_set_average_on_Exponential_distribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not set average on Uniform distribution.
        /// </summary>
        internal static string Can_not_set_average_on_Uniform_distribution {
            get {
                return ResourceManager.GetString("Can_not_set_average_on_Uniform_distribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chi square distribution.
        /// </summary>
        internal static string Chi_square_distribution {
            get {
                return ResourceManager.GetString("Chi_square_distribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chi square distribution is only defined for non-negative values.
        /// </summary>
        internal static string Chi_square_distribution_is_only_defined_for_non_negative_values {
            get {
                return ResourceManager.GetString("Chi_square_distribution_is_only_defined_for_non_negative_values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Chi square distribution is only defined for positive degrees of freedom.
        /// </summary>
        internal static string Chi_square_distribution_is_only_defined_for_positive_degrees_of_freedom {
            get {
                return ResourceManager.GetString("Chi_square_distribution_is_only_defined_for_positive_degrees_of_freedom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Degree of freedom must be positive.
        /// </summary>
        internal static string Degree_of_freedom_must_be_positive {
            get {
                return ResourceManager.GetString("Degree_of_freedom_must_be_positive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exponential distribution.
        /// </summary>
        internal static string Exponential_distribution {
            get {
                return ResourceManager.GetString("Exponential_distribution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exponential distribution is only defined for non-negative values.
        /// </summary>
        internal static string Exponential_distribution_is_only_defined_for_non_negative_values {
            get {
                return ResourceManager.GetString("Exponential_distribution_is_only_defined_for_non_negative_values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exponential distribution is only defined for positive scale.
        /// </summary>
        internal static string Exponential_distribution_is_only_defined_for_positive_scale {
            get {
                return ResourceManager.GetString("Exponential_distribution_is_only_defined_for_positive_scale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exponential fall-off must be positive.
        /// </summary>
        internal static string Exponential_fall_off_must_be_positive {
            get {
                return ResourceManager.GetString("Exponential_fall_off_must_be_positive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to F-CL argument must be positive.
        /// </summary>
        internal static string F_CL_argument_must_be_positive {
            get {
                return ResourceManager.GetString("F_CL_argument_must_be_positive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First degree of freedom must be positive.
        /// </summary>
        internal static string First_degree_of_freedom_must_be_positive {
            get {
                return ResourceManager.GetString("First_degree_of_freedom_must_be_positive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fisher-Snedecor distribution has positive degrees of freedom.
        /// </summary>
        internal static string Fisher_Snedecor_distribution_has_positive_degrees_of_freedom {
            get {
                return ResourceManager.GetString("Fisher_Snedecor_distribution_has_positive_degrees_of_freedom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fisher-Snedecor distribution is only defined for non-negative values.
        /// </summary>
        internal static string Fisher_Snedecor_distribution_is_only_defined_for_non_negative_values {
            get {
                return ResourceManager.GetString("Fisher_Snedecor_distribution_is_only_defined_for_non_negative_values", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Limits of distribution are equal or reversed.
        /// </summary>
        internal static string Limits_of_distribution_are_equal_or_reversed {
            get {
                return ResourceManager.GetString("Limits_of_distribution_are_equal_or_reversed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Second degree of freedom must be positive.
        /// </summary>
        internal static string Second_degree_of_freedom_must_be_positive {
            get {
                return ResourceManager.GetString("Second_degree_of_freedom_must_be_positive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set not defined for FisherSnedecorDistribution.Average.
        /// </summary>
        internal static string Set_not_defined_for_FisherSnedecorDistribution_Average {
            get {
                return ResourceManager.GetString("Set_not_defined_for_FisherSnedecorDistribution_Average", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Student distribution is only defined for positive variance.
        /// </summary>
        internal static string Student_distribution_is_only_defined_for_positive_variance {
            get {
                return ResourceManager.GetString("Student_distribution_is_only_defined_for_positive_variance", resourceCulture);
            }
        }
    }
}
